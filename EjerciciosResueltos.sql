use jardineria;

-- 1.4.5 Consultas multitabla (Composición interna)
-- 1. Obtén un listado con el nombre de cada cliente y el nombre y apellido de su representante de ventas.

SELECT CONCAT(C.NOMBRE_CONTACTO," ",C.APELLIDO_CONTACTO) CLIENTE,
CONCAT(E.NOMBRE," ",E.APELLIDO1," ",E.APELLIDO2) REPRESENTANTE_DE_VENTAS,
C.CODIGO_EMPLEADO_REP_VENTAS AS CODIGO_EMPLEADO
FROM CLIENTE C INNER JOIN EMPLEADO E ON C.CODIGO_EMPLEADO_REP_VENTAS = E.CODIGO_EMPLEADO
ORDER BY CODIGO_EMPLEADO;

-- 2. Muestra el nombre de los clientes que hayan realizado pagos junto con el nombre de sus representantes de ventas.

SELECT
    P.ID_TRANSACCION,
    CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS REPRESENTANTE_DE_VENTAS
FROM CLIENTE C 
INNER JOIN EMPLEADO E ON C.CODIGO_EMPLEADO_REP_VENTAS = E.CODIGO_EMPLEADO
INNER JOIN PAGO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
WHERE P.FORMA_PAGO IS NOT NULL
ORDER BY P.ID_TRANSACCION;

-- 3. Muestra el nombre de los clientes que no hayan realizado pagos junto con el nombre de sus representantes de ventas.

SELECT
    CONCAT(C.NOMBRE_CONTACTO," ",C.APELLIDO_CONTACTO) AS CLIENTE,
    CONCAT(E.NOMBRE, ' ', E.APELLIDO1, ' ', E.APELLIDO2) AS REPRESENTANTE_DE_VENTAS
FROM CLIENTE C 
INNER JOIN EMPLEADO E ON C.CODIGO_EMPLEADO_REP_VENTAS = E.CODIGO_EMPLEADO
LEFT JOIN PAGO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
WHERE P.ID_TRANSACCION IS NULL;

-- 4. Devuelve el nombre de los clientes que han hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT
    O.CODIGO_OFICINA,
    CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS REPRESENTANTE_DE_VENTAS
FROM CLIENTE C 
INNER JOIN EMPLEADO E ON C.CODIGO_EMPLEADO_REP_VENTAS = E.CODIGO_EMPLEADO
INNER JOIN PAGO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
INNER JOIN OFICINA O ON E.CODIGO_OFICINA = O.CODIGO_OFICINA
WHERE P.ID_TRANSACCION IS NOT NULL
ORDER BY P.ID_TRANSACCION;

-- 5. Devuelve el nombre de los clientes que no hayan hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT
    O.CODIGO_OFICINA,
    CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS REPRESENTANTE_DE_VENTAS
FROM CLIENTE C 
INNER JOIN EMPLEADO E ON C.CODIGO_EMPLEADO_REP_VENTAS = E.CODIGO_EMPLEADO
LEFT JOIN PAGO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
INNER JOIN OFICINA O ON E.CODIGO_OFICINA = O.CODIGO_OFICINA
WHERE P.CODIGO_CLIENTE IS NULL
ORDER BY P.ID_TRANSACCION;

-- 6. Lista la dirección de las oficinas que tengan clientes en Fuenlabrada.

SELECT
    O.CODIGO_OFICINA,
    CONCAT(O.LINEA_DIRECCION1, " ", O.LINEA_DIRECCION2) AS DIRECCION,
    C.CIUDAD
FROM EMPLEADO E
LEFT JOIN CLIENTE C ON C.CODIGO_EMPLEADO_REP_VENTAS=E.CODIGO_EMPLEADO
LEFT JOIN OFICINA O ON O.CODIGO_OFICINA=E.CODIGO_OFICINA
WHERE C.CIUDAD LIKE "FUENLABRADA";

-- 7. Devuelve el nombre de los clientes y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS REPRESENTANTE_DE_VENTAS,
    O.CIUDAD
FROM EMPLEADO E
LEFT JOIN OFICINA O ON O.CODIGO_OFICINA=E.CODIGO_OFICINA
INNER JOIN CLIENTE C ON C.CODIGO_EMPLEADO_REP_VENTAS=E.CODIGO_EMPLEADO;  

-- 8. Devuelve un listado con el nombre de los empleados junto con el nombre de sus jefes.

SELECT
	CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS EMPLEADOS,
    CONCAT(J.NOMBRE, " ", J.APELLIDO1, " ", J.APELLIDO2) AS JEFES
FROM EMPLEADO E
INNER JOIN EMPLEADO J ON J.CODIGO_JEFE = E.CODIGO_EMPLEADO
ORDER BY JEFES;

-- 9. Devuelve un listado que muestre el nombre de cada empleado, el nombre de su jefe y el nombre del jefe de sus jefe.

SELECT
    CONCAT(E.NOMBRE, " ", E.APELLIDO1, " ", E.APELLIDO2) AS EMPLEADO,
    CONCAT(J.NOMBRE, " ", J.APELLIDO1, " ", J.APELLIDO2) AS JEFE,
    CONCAT(JJ.NOMBRE, " ", JJ.APELLIDO1, " ", JJ.APELLIDO2) AS JEFE_DEL_JEFE
FROM EMPLEADO E
INNER JOIN EMPLEADO J ON J.CODIGO_EMPLEADO = E.CODIGO_JEFE
INNER JOIN EMPLEADO JJ ON JJ.CODIGO_EMPLEADO = J.CODIGO_JEFE;

-- 10. Devuelve el nombre de los clientes a los que no se les ha entregado a tiempo un pedido.

SELECT
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    P.FECHA_ESPERADA, P.FECHA_ENTREGA
FROM CLIENTE C
INNER JOIN PEDIDO P ON C.CODIGO_CLIENTE = P.CODIGO_CLIENTE
WHERE P.FECHA_ESPERADA < P.FECHA_ENTREGA;
	

-- 11. Devuelve un listado de las diferentes gamas de producto que ha comprado cada cliente.

SELECT
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) AS CLIENTE,
    G.GAMA
FROM CLIENTE C
INNER JOIN PEDIDO P ON C.CODIGO_CLIENTE = P.CODIGO_CLIENTE
INNER JOIN DETALLE_PEDIDO DP ON P.CODIGO_PEDIDO = DP.CODIGO_PEDIDO
INNER JOIN PRODUCTO PR ON DP.CODIGO_PRODUCTO = PR.CODIGO_PRODUCTO
INNER JOIN GAMA_PRODUCTO G ON PR.GAMA = G.GAMA
GROUP BY CLIENTE, G.GAMA ORDER BY CLIENTE;

-- ----------------------------------------------------------------------------------------------------------

-- 1.4.6 Consultas multitabla (Composición externa)
-- 1. Devuelve un listado que muestre solamente los clientes que no han realizado ningún pago.

SELECT 
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) Cliente
FROM CLIENTE C
LEFT JOIN PAGO P ON P.CODIGO_CLIENTE=C.CODIGO_CLIENTE 
WHERE P.CODIGO_CLIENTE IS NULL;

-- 2. Devuelve un listado que muestre solamente los clientes que no han realizado ningún pedido.

SELECT
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) Cliente
FROM CLIENTE C
LEFT JOIN PEDIDO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE 
WHERE P.CODIGO_CLIENTE IS NULL;

-- 3. Devuelve un listado que muestre los clientes que no han realizado ningún pago y los que no han realizado ningún pedido.

SELECT 
	CONCAT(C.NOMBRE_CONTACTO, " ", C.APELLIDO_CONTACTO) Cliente
FROM CLIENTE C
LEFT JOIN PEDIDO P ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
LEFT JOIN PAGO PA ON PA.CODIGO_CLIENTE = C.CODIGO_CLIENTE
WHERE P.CODIGO_CLIENTE IS NULL AND PA.CODIGO_CLIENTE IS NULL;

-- 4. Devuelve un listado que muestre solamente los empleados que no tienen una oficina asociada.

SELECT 
	CONCAT(E.NOMBRE," ",E.APELLIDO1," ",E.APELLIDO2) SIN_OFICINA
FROM EMPLEADO E
LEFT JOIN OFICINA O ON O.CODIGO_OFICINA = E.CODIGO_OFICINA 
WHERE O.CODIGO_OFICINA IS NULL;

-- 5. Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado.

SELECT
CONCAT(E.NOMBRE," ",E.APELLIDO1," ",E.APELLIDO2) EMPLEADOS_SIN_CLIENTES
FROM CLIENTE C
NATURAL RIGHT JOIN EMPLEADO E
WHERE C.CODIGO_CLIENTE IS NULL;

-- 6. Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado junto con los datos de la oficina donde trabajan.

SELECT 
	CONCAT(E.NOMBRE," ",E.APELLIDO1," ",E.APELLIDO2) E_SinClientes , 
    O.PAIS PAIS_OFICINA, O.CIUDAD CIUDAD_OFICINA
FROM EMPLEADO E
LEFT JOIN CLIENTE C ON E.CODIGO_EMPLEADO = C.CODIGO_EMPLEADO_REP_VENTAS
LEFT JOIN OFICINA O ON E.CODIGO_OFICINA = E.CODIGO_OFICINA WHERE C.CODIGO_CLIENTE IS NULL;

-- 7. Devuelve un listado que muestre los empleados que no tienen una oficina asociada y los que no tienen un cliente asociado.

SELECT 
	CONCAT(E.NOMBRE," ",E.APELLIDO1," ",E.APELLIDO2) EMPLEADO,
    O.CIUDAD CIUDAD_OFICINA,O.PAIS PAIS_OFICINA
FROM EMPLEADO E
LEFT JOIN CLIENTE C ON E.CODIGO_EMPLEADO = C.CODIGO_EMPLEADO_REP_VENTAS
LEFT JOIN OFICINA O ON E.CODIGO_OFICINA = O.CODIGO_OFICINA 
WHERE E.CODIGO_OFICINA IS NULL AND C.CODIGO_CLIENTE IS NULL;

-- 8. Devuelve un listado de los productos que nunca han aparecido en un pedido.

SELECT NOMBRE PRODUCTOS
FROM PRODUCTO
WHERE CODIGO_PRODUCTO NOT IN (SELECT DISTINCT CODIGO_PRODUCTO FROM DETALLE_PEDIDO) GROUP BY NOMBRE;

-- 9. Devuelve un listado de los productos que nunca han aparecido en un pedido. El resultado debe mostrar el nombre, la descripción y la imagen del producto.

SELECT P.NOMBRE PRODUCTOS , P.DESCRIPCION DESCRIPCION , G.IMAGEN 
FROM PRODUCTO P
LEFT JOIN GAMA_PRODUCTO G ON P.GAMA = G.GAMA
LEFT JOIN DETALLE_PEDIDO D ON P.CODIGO_PRODUCTO = D.CODIGO_PRODUCTO 
WHERE P.DESCRIPCION IS NOT NULL AND D.CODIGO_PRODUCTO IS NULL GROUP BY P.NOMBRE, P.DESCRIPCION, G.IMAGEN;